sudo: required

language: python

matrix:
  include:
    - os: linux
      dist: trusty
      go: 1.8
      group: edge
    - os: osx
      osx_image: xcode7.3
      language: generic
      go: 1.8
    - env: DOCKER=true OS_TYPE=centos OS_VERSION=centos7
    - env: DOCKER=true OS_TYPE=ubuntu OS_VERSION=xenial
    #- env: DOCKER=true OS_TYPE=centos OS_VERSION=centos6.9 #TODO needs more work

services:
  - docker

before_install:
    - if [[ "$DOCKER" != "true" ]] && [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update                            ; fi
    - if [[ "$DOCKER" != "true" ]] && [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install python3                   ; fi
    - if [[ "$DOCKER" != "true" ]] && [[ "$TRAVIS_OS_NAME" == "osx" ]]; then ./test/dependencies_osx.sh             ; fi
    - if [[ "$DOCKER" != "true" ]] && [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./test/dependencies_linux.sh         ; fi
    - if [[ "$DOCKER" == "true" ]]; then docker pull ${OS_TYPE}:${OS_VERSION}                                       ; fi

script:
    - if [[ "$DOCKER" != "true" ]]; then ./test/tests.sh ;fi
    - if [[ "$DOCKER" == "true" ]] && [[ "$OS_TYPE" == "centos" ]]; then docker run -v `pwd`:/ydk-gen ${OS_TYPE}:${OS_VERSION} bash -c "cd /ydk-gen && ./test/dependencies_centos.sh && ./test/tests.sh" ; fi
    - if [[ "$DOCKER" == "true" ]] && [[ "$OS_TYPE" == "ubuntu" ]]; then docker run -v `pwd`:/ydk-gen ${OS_TYPE}:${OS_VERSION} bash -c "cd /ydk-gen && ./test/dependencies_linux.sh && ./test/tests.sh" ; fi

after_success:
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports" ; fi  # Uploading python report to CodeCov

#    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cd ${TRAVIS_BUILD_DIR}/sdk/cpp/core/build ; fi
#    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then lcov --directory . --capture --output-file coverage.info ; fi # capture coverage info
#    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then lcov --remove coverage.info '/usr/*' '/Applications/*' --output-file coverage.info ; fi # filter out system
    #- lcov --list coverage.info #debug info
    # Uploading cpp report to CodeCov
#    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports" ; fi
